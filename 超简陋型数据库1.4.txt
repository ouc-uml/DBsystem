这一层提供两个数据结构：条目和表，实现了在外存上的基本的数据库操作；


条目（item）类
条目类存放单个元组的信息；
item类包含一个map，存放键―值对，其中键均为字符串，值含有32个字节，可为无符号整型可为字符串；


item(unsigned char name[])
///新建一个名字为name的空条目，！！！名字唯一标识一个条目。若已存在则直接返回该条目；


void add_val(unsigned char k[],unsigned int n)
//添加键―值对，值为整型；
void add_val(unsigned char k[],unsigned char s[])
//添加键―值对，值为字符串；


bool delete_val(unsigned char k[])
//将键为k的值置NULL；成功返回1；


bool modify_val(unsigned char k[],int i)
//修改键为k的值为i，该数据类型应为unsigned　int（但不检查）；成功返回1; 
bool modify_val(unsigned char k[],unsigned char s[])
//修改键为k的值为s，该数据类型应为字符串（但不检查）；成功返回1；
	

bool get_val(unsigned char k[],unsigned int &i)
//获取键为k的值到整型i上；成功返回1；
bool get_val(unsigned char k[],unsigned char s[])
//获取键为k的值字符串s上；成功返回1；


void clear_all()
//清空该条目，但不删除；
void delete_all()
//删除该条目，慎用；


__________________________________________________________________________________


表（table）类
表存放多个元组的信息，元组在表里被唯一的编号，同时维护该表上的索引；
表中含3个map，2个list；
map_1为主体部分，存放 条目编号―条目名字 关系；
map_2为索引链接，存放 条目编号―包含该条目索引的名字的链的名字，提供修改条目时连接索引的功能；
map_3为属性备忘，存放 属性名―属性类型（无符号整型或字符串）
list_1为删除链，存放暂时被删除而空置的编号，用于提供下一个插入条目的编号；
list_4为建立了索引的属性列，存放建立了索引的属性列；

在该结构体之外，还定义了关于列的索引用map：
map_index，存放 列值-列编号链；
与关于条目对应索引用的链（可视为透明）
list_item, 存放 列编号-出现的索引名；


table(unsigned char name[])
///新建一个名字为name的空表，！！！名字唯一标识一个表。若已存在则直接返回该表；


void add_row(unsigned char s[]，char type)
//为所有条目在末尾添加名为s的新列，值为空；
//type为'd'添加unsigned int型，否则添加字符串；
bool add_item()
//添加新的空条目，添加位置随机,返回条目编号；
    
int get_all_no(unsigned int i[])
//获取所有条目编号至数组 i 中，返回条目个数;
item get_item(unsigned int i)
//获取编号为i的条目,注意！不检查是否存在！！
bool edit_item(unsigned int i)
//直接编辑第i条条目（键入），检查是否存在。
bool delete_item(unsigned char s[])
//删除名为s的条目，检查是否存在，修改索引；


bool set_index(unsigned int i)
//为第i列建立索引；
vector<char> find_index(unsigned int i,unsigned val)
//在第i列上搜索值为val的条目，返回满足条件的item的编号的vector；
bool find_index(unsigned int i,unsigned char s[])
//在第i列上搜索值为s的条目，返回满足条件的item的编号的vector；


void delete_talbe()
//删除该表及表上所有条目，所有索引。

保留字表：
table名
table名+"_items"
table名+"_items_index"
table名+"_items_empty"
table名+"_row"
table名+"_row_type"
table名+"_index"
table名+列名
table名+列名+列值

